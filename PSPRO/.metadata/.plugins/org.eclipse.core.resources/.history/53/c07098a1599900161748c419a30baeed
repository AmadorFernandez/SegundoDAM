import java.util.LinkedList;
import java.util.Queue;
import java.util.Timer;

public class Caja extends Thread {

	private Queue<Cliente> cola;
	private int nCaja;
	private Cuenta cuenta;
	private double recaudacion;
	private Timer crono;
	
	public double getRecaudacion(){
		
		return this.recaudacion;
	
	}
	
	public int getNCaja(){
		
		return this.nCaja;
	}
	
	public Queue<Cliente> getCola(){
		notify();
		return this.cola;
	}
	
	public Caja(Cuenta c, int nCaja){
		
		this.cuenta = c;
		this.nCaja = nCaja;
		this.cola = new LinkedList<Cliente>();
		this.recaudacion = 0;
		
	}
	
	public void ingresar(double catidad){
		
		synchronized(this.cuenta){
			
			cuenta.sumValor(catidad);
		}
	}
	
	private boolean hayClientes(){
		
		synchronized (Supermercado.clientes) {
			
			return Supermercado.clientes.size() > 0;
		}
	}
	
	public void run(){
		
		Cliente cliente;
		long inicio;
		long acabado;
		
		while(hayClientes() && Supermercado.abierto){
			
			if(cola.size() > 0){
				
				inicio = System.currentTimeMillis();
				cliente = cola.poll();
				ingresar(cliente.pagar());
				cliente.setAtendido(true);
				acabado = System.currentTimeMillis();
				Supermercado.clientes.remove(cliente);
				Supermercado.tiempoDeAtencion.addAndGet(acabado - inicio);
				
			}else{
				
				interrupt();
			}
		}
		
	}
	
}
