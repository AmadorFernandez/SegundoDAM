import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Principal {
	
	public static int contador = 0;

	public static void main(String[] args) throws InterruptedException {
		
		
		Sumador sumador1 = new Sumador();
		Sumador sumador2 = new Sumador();
		
		sumador1.start();
		
		sumador1.join();
		
	
		
		System.out.println("El contador vale: "+contador);
		
		

	}

}

class Restador extends Thread{
	
	private Lock bLock = new ReentrantLock();
	
	public void run() {
		
		
		
		
		try{
		for (int i = 0; i < 500; i++) {
			
			
			Principal.contador--;
			
		}
		}finally{
			
			bLock.unlock();
		}
		
	}
	
	
}

class Sumador extends Thread{
	
private Lock bLock = new ReentrantLock();
	
	public void run() {
		
		
		bLock.lock();
		
		try{
		for (int i = 0; i < 1000; i++) {
			
			Principal.contador++;
			
		}
		}finally{
			
			bLock.unlock();
		}
		
	}
	
}
